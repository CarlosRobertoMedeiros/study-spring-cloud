version: "3.7"

services:
  
  #KeyCloak Database
  postgres-db-keycloak-authorization-server:
    container_name: postgres-db-keycloak-authorization-server
    image: postgres:14.2
    command: postgres -c 'max_connections=200'
    volumes:
      - pgdata-keycloak-authorization-server:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      DATABASE_HOST: localhost
    healthcheck:
      test: "exit 0"
    ports:
      - "5436:5432"  
    networks:
      - stack1-network
    
    
  #KeyCloak(SSO)
  #link: localhost:8085
  keycloak-authorization-server:
    container_name: keycloak-authorization-server
    hostname: keycloak-authorization-server
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    ports:
      - 8085:8080
    command:
      - start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-db-keycloak-authorization-server 
      KC_DB_URL_DATABASE: keycloak
      KC_DB_PASSWORD: password
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

    depends_on:
      postgres-db-keycloak-authorization-server:
        condition: service_healthy
    networks:
      - stack1-network
  
  
  #DataBase 1
  #postgres_calendario:
  #  container_name: postgres_calendario_service
  #  image: postgres:12.2
  #  environment:
  #    DATABASE_HOST: localhost
  #    POSTGRES_DB: calendario_service
  #    POSTGRES_USER: calendario
  #    POSTGRES_PASSWORD: calendario
  #  volumes:
  #    - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
  #  ports:
  #    - "5432:5432"
  #  restart: unless-stopped      
  #  networks:
  #    - stack1-network

volumes:
  pgdata-keycloak-authorization-server:

networks:
  stack1-network:
    driver: bridge  
    
    
 